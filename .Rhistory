ahpFile <- system.file("extdata", "makbooki.ahp", package="ahp")
macAhp <- Load(ahpFile)
install.packages("DiagrammeR")
install.packages("formattable")
install.packages("data.tree")
library(ahp)
library(data.tree)
library(formattable)
library(DiagrammeR)
macAhp <- Load(ahpFile)
print(macAhp, filterFun = isNotLeaf)
Calculate(macAhp)
print(macAhp, "weight")
print(macAhp, "ram", "dysk")
save.image("X:\\AdamJuraszek\\APU\\APU2\\.RData")
q()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
library("MASS")
library("dplyr")
library("party")
library("mlr")
utils:::menuInstallPkgs()
library("mlr")
library("C50")
library("rpart")
train <- force(infert)
train
summarizeColumns(train)
data <- c("training", "test")
data
splitData <-  split(train, data)
splitData
tree <- rpart(Species ~ ., splitData$training)
tree <- rpart(education ~ ., splitData$training)
tree
table(infert$type)
tree <- C5.0(train[1:500, -5], train[1:500, 5])
tree <- C5.0(train[1:500, -1], train[1:500, 1])
summary(tree)
plot(tree)
library(randomForest)
library(e1071)
library(party)
library(mlr)
library(rFerns)
s=read.csv("C:/Users/asiat/Documents/R/Zad5/2/smartfony.csv")
s=read.csv("C:/Users/X:\AdamJuraszek\APU\APU/Documents/R/Zad5/2/.csv")
mac=read.csv("X:\AdamJuraszek\APU\APU5\Mackbooki.csv")
mac=read.csv("X:/AdamJuraszek/APU/APU5/Mackbooki.csv")
mac
mac$nazwa = factor(mac$nazwa)
mac$ocena = factor(mac$ocena)
summarizeColumns(mac)
mac
summarizeColumns(mac)
desc = makeResampleDesc("CV", iters = 15)
task(task = makeClassifTask(id = deparse(substitute(s)), s, "ocena_klientow",
                       weights = NULL, blocking = NULL, coordinates = NULL,
task = makeClassifTask(id = deparse(substitute(s)), s, "ocena_klientow",
                       weights = NULL, blocking = NULL, coordinates = NULL,
                       positive = NA_character_, fixup.data = "warn", check.data = TRUE)
task = makeClassifTask(id = deparse(substitute(mac)), mac, "ocena",
                       weights = NULL, blocking = NULL, coordinates = NULL,
                       positive = NA_character_, fixup.data = "warn", check.data = TRUE)
mac <- mac[1:7]
mac
mac$nazwa = factor(mac$nazwa)
mac$ocena = factor(mac$ocena)
summarizeColumns(mac)
desc = makeResampleDesc("CV", iters = 15)
task = makeClassifTask(id = deparse(substitute(mac)), mac, "ocena",
                       weights = NULL, blocking = NULL, coordinates = NULL,
                       positive = NA_character_, fixup.data = "warn", check.data = TRUE)
lrns <- makeLearners(mac("rpart", "C50", "ctree", "naiveBayes", "randomForest"), type = "classif")
lrns <- makeLearners(c("rpart", "C50", "ctree", "naiveBayes", "randomForest"), type = "classif")
bmr <- benchmark(learners = lrns, tasks = task, rdesc, models = TRUE, measures = list(acc, ber))
bmr <- benchmark(learners = lrns, tasks = task, desc, models = TRUE, measures = list(acc, ber))
getbmr = getBMRPredictions(bmr)
plotBMRSummary(bmr)
save.image("X:\\AdamJuraszek\\APU\\APU5\\.RData")
